function Hd = noiseFilter24BandPassHigh
%NOISEFILTER24BANDPASSHIGH Returns a discrete-time filter object.

% MATLAB Code
% Generated by MATLAB(R) 8.1 and the Signal Processing Toolbox 6.19.
% Generated on: 08-Jun-2015 19:15:45

% FIR least-squares Multiband filter designed using the FIRLS function.

% All frequency values are in Hz.
Fs = 44100;  % Sampling Frequency

N = 100;  % Order

% Frequency Vector
F = [0 770 780 810 820 1561 1571 1601 1611 2352 2362 2392 2402 3143 3153 3183 3193 3934 3944 3974 3984 4725 4735 4765 4775 5516 5526 5556 5566 6307 6317 6347 6357 7098 7108 7138 7148 7889 7899 7929 7939 8680 8690 8720 8730 9471 9481 9511 9521 10262 10272 10302 10312 11053 11063 11093 11103 11844 11854 11884 11894 12635 12645 12675 12685 13426 13436 13466 13476 14217 14227 14257 14267 15008 15018 15048 15058 15799 15809 15839 15849 16590 16600 16630 16640 17381 17391 17421 17431 18172 18182 18212 18222 18963 18973 19003 19013 19754 19764 19794 19804 20545 20555 20585 20595 21336 21346 21376 21386 22050];

% Amplitude Vector
A = [0 0 0 1 0.2  0.2 1 1 0  0 1 1 0  0 1 1 0  0 0.4 0.4 0.02 ...
     0.02 0.4 0.0 0.02  0.02 0.4 0.0 0.02  0.02 0.2 0.2 0.02  0.02 0.2 0.2 0.02  0.02 0.2 0.2 0.02 ...
     0.02 0.2 0.2 0.02  0.02 0.2 0.2 0.02  0.02 0.2 0.2 0.02  0.02 0.2 0.4 0.05 0.05 0.4 0.2 0 ...
     0 0.1 0.1 0 0 0.08 0.08 0.001 0.001 0.05 0.05 0.001 0.001 0.03 0.03 0.001 0.001 0.01 0.01 0.001 ...
     0.001 0.01 0.01 0.001  0.001 0.01 0.01 0.001  0.001 0.01 0.01 0.001  0.001 0.01 0.01 0.001 ...
     0.001 0.01 0.01 0.001  0.001 0.01 0.01 0.001  0.001 0.01 0.01 0.001  0 ];

% Weight Vector
W = [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ...
     1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1];

% Calculate the coefficients using the FIRLS function.
b  = firls(N, F/(Fs/2), A, W);
Hd = dfilt.dffir(b);

% [EOF]
